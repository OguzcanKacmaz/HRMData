@{
    ViewData["Title"] = "Şifre Sıfırla";
}

@model ChangePasswordViewModel
@{
    ViewData["Title"] = "Şifreyi Sıfırla";
    Layout = "";
}

<!DOCTYPE html>
<html lang="tr">

<head>
    <meta charset="UTF-8">
    <meta content="width=device-width, initial-scale=1" name="viewport" />
    <title>@ViewData["Title"] - HRMData.WEB</title>
    <!-- Favicon-->
    <link rel="icon" href="../../assets/images/favicon.ico" type="image/x-icon">
    <!-- Plugins Core Css -->
    <link href="../../assets/css/common.min.css" rel="stylesheet">
    <!-- Custom Css -->
    <link href="../../assets/css/style.css" rel="stylesheet" />
    <link href="../../assets/css/pages/extra_pages.css" rel="stylesheet" />
    <link href="~/css/login.css" rel="stylesheet" />
    <link href="~/lib/sweetalert2/dist/sweetalert2.min.css" rel="stylesheet" />
</head>

<body>
    <div class="limiter">
        <div class="container-login100">
            <div class="wrap-login100">
                <form asp-action="ChangePassword" asp-controller="Home" class="login100-form validate-form">
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class=" text-center alert alert-success" role="alert">
                            @TempData["SuccessMessage"]
                        </div>
                    }
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger text-center"></div>
                    <span class="login100-form-title p-b-45">
                        Şifre Değiştir
                    </span>
                    <div class="wrap-input100 ">
                        <input asp-for="OldPassword" class="input100" type="text" placeholder="Geçici Şifre">
                    </div>
                    <span class="text-danger" asp-validation-for="OldPassword"></span>
                    <div class="wrap-input100 ">
                        <input asp-for="NewPassword" class="input100" type="text" placeholder="Yeni Şifre">
                    </div>
                    <span class="text-danger" asp-validation-for="NewPassword"></span>
                    <div class="wrap-input100">
                        <input asp-for="NewPasswordRepeat" class="input100" type="text" placeholder="Yeni Şifre Tekrarı" id="password-field">                       
                    </div>
                    <span class="text-danger" asp-validation-for="NewPasswordRepeat"></span>
                    <div class="container-login100-form-btn">
                        <button class="login100-form-btn">
                            Sıfırla
                        </button>
                    </div>

                    <div class="w-full p-t-25 text-center">
                        <div>
                            <a asp-action="SignIn" asp-controller="Home" class="txt1">
                                Giriş Yap
                            </a>
                        </div>
                    </div>
                </form>
                <div class="login100-more" style="background-image: url('../../assets/images/pages/bg-03.png');">
                </div>
            </div>
        </div>
    </div>

    <!-- Plugins Js -->
    <script src="../../assets/js/common.min.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <!-- Extra page Js -->
    <script src="../../assets/js/pages/examples/pages.js"></script>
    <script src="~/lib/sweetalert2/dist/sweetalert2.all.min.js"></script>
    <partial name="_ValidationScriptsPartial" />
</body>

</html>
<script>
    let message = '@TempData["SuccessMessage"]';
    if (message != "") {
        $(document).ready(function () {
            let timerInterval;
            Swal.fire({
                title: '@TempData["SuccessMessage"]',
                html: '<b></b> Saniye Sonra Otomatik Giriş Ekranına Yönlendirileceksiniz',
                timer: 5000,
                timerProgressBar: true,
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading()
                    const b = Swal.getHtmlContainer().querySelector('b')
                    timerInterval = setInterval(() => {
                        b.textContent = (Swal.getTimerLeft() / 1000).toFixed(0);
                    }, 100)
                },
                willClose: () => {
                    clearInterval(timerInterval)
                }
            }).then((result) => {
                /* Read more about handling dismissals below */
                if (result.dismiss === Swal.DismissReason.timer) {
                    window.location.href = "@Url.Action("SignIn", "Home")";
                }
            })
        });
    }
</script>
